@model IEnumerable<CineplexCustomerWebsite.Models.Seating>

@{
    ViewBag.Title = "Booking";
}


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    @*    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>*@

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var hub = $.connection.SeatAvailabilityHub;
            // Create a function that the hub can call back to display messages.
            hub.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>

<h2>Booking</h2>

<div class="jumbotron">
    <table style="margin-left: auto; margin-right: auto">


        <img src="~/Content/Icons/Screen.png" width="400" height="10" style="display: block; margin-left: auto; margin-right: auto"/><br/>
        @for (int i = 0; i < ViewBag.maxSeatsPerRow+2; i++)
        {
            <col width="50">
        }

        @foreach (var row in ViewBag.Rows)
        {
            <tr>
                @{ var seatsInRow = Model.Where(seat => seat.SessionID == ViewBag.MovieSessionID && seat.Row == row);}
                @{ int columnsToSkip = (ViewBag.maxSeatsPerRow - seatsInRow.Count())/2;}
                @for (int i = 0; i < columnsToSkip; i++)
                {
                    <td></td>
                }
                @foreach (var seat in seatsInRow)
                {
                    <td>
                        @if ((bool) seat.IsTaken)
                        {
                            using (Html.BeginForm())
                            {
                                <input type="image" src="~/Content/Icons/seatTaken.png">
                            }
                        }
                        else if (((IEnumerable<int>) ViewBag.ChosenSeatIDs).Contains(seat.SeatingID))
                        {
                            using (Html.BeginForm("DeselectSeat", "Seating", seat))
                            {
                                <input type="image" src="~/Content/Icons/seatChosen.png">
                            }
                        }
                        else
                        {
                            using (Html.BeginForm("SelectSeat", "Seating", seat))
                            {
                                <input type="image" src="~/Content/Icons/seatAvailable.png">
                            }
                        }
                    </td>
                }
            </tr>
        }
    </table>
</div>
<br/>
<div class="row">
    <div class="col-sm-2">
        @using (Html.BeginForm("ConfirmBooking", "Booking"))
        {
            <input type="submit" class="btn btn-success" value="Confirm" />
        }
    </div>
    <div class="col-sm-2">
        @using (Html.BeginForm("CancelBooking", "Seating"))
        {
            <input type="submit" class="btn btn-danger" value="Cancel" />
        }
    </div>
    <div class="col-sm-8"></div>
</div>
